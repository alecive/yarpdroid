/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class IOpenLoopControlRaw {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected IOpenLoopControlRaw(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IOpenLoopControlRaw obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        yarpJNI.delete_IOpenLoopControlRaw(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean setRefOutputRaw(int j, double v) {
    return yarpJNI.IOpenLoopControlRaw_setRefOutputRaw(swigCPtr, this, j, v);
  }

  public boolean setRefOutputsRaw(SWIGTYPE_p_double v) {
    return yarpJNI.IOpenLoopControlRaw_setRefOutputsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(v));
  }

  public boolean getRefOutputRaw(int j, SWIGTYPE_p_double v) {
    return yarpJNI.IOpenLoopControlRaw_getRefOutputRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(v));
  }

  public boolean getRefOutputsRaw(SWIGTYPE_p_double v) {
    return yarpJNI.IOpenLoopControlRaw_getRefOutputsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(v));
  }

  public boolean getOutputRaw(int j, SWIGTYPE_p_double v) {
    return yarpJNI.IOpenLoopControlRaw_getOutputRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(v));
  }

  public boolean getOutputsRaw(SWIGTYPE_p_double v) {
    return yarpJNI.IOpenLoopControlRaw_getOutputsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(v));
  }

  public boolean setOpenLoopModeRaw() {
    return yarpJNI.IOpenLoopControlRaw_setOpenLoopModeRaw(swigCPtr, this);
  }

}
