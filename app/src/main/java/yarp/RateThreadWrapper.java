/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class RateThreadWrapper extends RateThread {
  private long swigCPtr;

  protected RateThreadWrapper(long cPtr, boolean cMemoryOwn) {
    super(yarpJNI.RateThreadWrapper_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RateThreadWrapper obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        yarpJNI.delete_RateThreadWrapper(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public RateThreadWrapper() {
    this(yarpJNI.new_RateThreadWrapper__SWIG_0(), true);
  }

  public RateThreadWrapper(SWIGTYPE_p_Runnable helper) {
    this(yarpJNI.new_RateThreadWrapper__SWIG_1(SWIGTYPE_p_Runnable.getCPtr(helper)), true);
  }

  public void detach() {
    yarpJNI.RateThreadWrapper_detach(swigCPtr, this);
  }

  public boolean attach(SWIGTYPE_p_Runnable helper) {
    return yarpJNI.RateThreadWrapper_attach__SWIG_0(swigCPtr, this, SWIGTYPE_p_Runnable.getCPtr(helper));
  }

  public boolean open(double framerate, boolean polling) {
    return yarpJNI.RateThreadWrapper_open__SWIG_0(swigCPtr, this, framerate, polling);
  }

  public boolean open(double framerate) {
    return yarpJNI.RateThreadWrapper_open__SWIG_1(swigCPtr, this, framerate);
  }

  public boolean open() {
    return yarpJNI.RateThreadWrapper_open__SWIG_2(swigCPtr, this);
  }

  public void close() {
    yarpJNI.RateThreadWrapper_close(swigCPtr, this);
  }

  public void stop() {
    yarpJNI.RateThreadWrapper_stop(swigCPtr, this);
  }

  public void run() {
    yarpJNI.RateThreadWrapper_run(swigCPtr, this);
  }

  public boolean threadInit() {
    return yarpJNI.RateThreadWrapper_threadInit(swigCPtr, this);
  }

  public void threadRelease() {
    yarpJNI.RateThreadWrapper_threadRelease(swigCPtr, this);
  }

  public void afterStart(boolean success) {
    yarpJNI.RateThreadWrapper_afterStart(swigCPtr, this, success);
  }

  public void beforeStart() {
    yarpJNI.RateThreadWrapper_beforeStart(swigCPtr, this);
  }

  public SWIGTYPE_p_Runnable getAttachment() {
    long cPtr = yarpJNI.RateThreadWrapper_getAttachment(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Runnable(cPtr, false);
  }

}
