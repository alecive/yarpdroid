/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class StubDriverCreator extends DriverCreator {
  private long swigCPtr;

  protected StubDriverCreator(long cPtr, boolean cMemoryOwn) {
    super(yarpJNI.StubDriverCreator_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(StubDriverCreator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        yarpJNI.delete_StubDriverCreator(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public StubDriverCreator(String name, String wrap, String code, String libname, String fnname) {
    this(yarpJNI.new_StubDriverCreator(name, wrap, code, libname, fnname), true);
  }

  public String toString_c() {
    return yarpJNI.StubDriverCreator_toString_c(swigCPtr, this);
  }

  public String getName() {
    return yarpJNI.StubDriverCreator_getName(swigCPtr, this);
  }

  public String getWrapper() {
    return yarpJNI.StubDriverCreator_getWrapper(swigCPtr, this);
  }

  public String getCode() {
    return yarpJNI.StubDriverCreator_getCode(swigCPtr, this);
  }

  public DeviceDriver create() {
    long cPtr = yarpJNI.StubDriverCreator_create(swigCPtr, this);
    return (cPtr == 0) ? null : new DeviceDriver(cPtr, false);
  }

}
