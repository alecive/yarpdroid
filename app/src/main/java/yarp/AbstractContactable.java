/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class AbstractContactable extends UnbufferedContactable {
  private long swigCPtr;

  protected AbstractContactable(long cPtr, boolean cMemoryOwn) {
    super(yarpJNI.AbstractContactable_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AbstractContactable obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        yarpJNI.delete_AbstractContactable(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public boolean open() {
    return yarpJNI.AbstractContactable_open__SWIG_0_0(swigCPtr, this);
  }

  public boolean open(String name) {
    return yarpJNI.AbstractContactable_open__SWIG_0_1(swigCPtr, this, name);
  }

  public boolean open(Contact contact, boolean registerName) {
    return yarpJNI.AbstractContactable_open__SWIG_0_2(swigCPtr, this, Contact.getCPtr(contact), contact, registerName);
  }

  public boolean open(Contact contact) {
    return yarpJNI.AbstractContactable_open__SWIG_0_3(swigCPtr, this, Contact.getCPtr(contact), contact);
  }

  public Port asPort() {
    return new Port(yarpJNI.AbstractContactable_asPort__SWIG_0(swigCPtr, this), false);
  }

  public boolean addOutput(String name) {
    return yarpJNI.AbstractContactable_addOutput__SWIG_0(swigCPtr, this, name);
  }

  public boolean addOutput(String name, String carrier) {
    return yarpJNI.AbstractContactable_addOutput__SWIG_1(swigCPtr, this, name, carrier);
  }

  public boolean addOutput(Contact contact) {
    return yarpJNI.AbstractContactable_addOutput__SWIG_2(swigCPtr, this, Contact.getCPtr(contact), contact);
  }

  public void close() {
    yarpJNI.AbstractContactable_close(swigCPtr, this);
  }

  public void interrupt() {
    yarpJNI.AbstractContactable_interrupt(swigCPtr, this);
  }

  public void resume() {
    yarpJNI.AbstractContactable_resume(swigCPtr, this);
  }

  public Contact where() {
    return new Contact(yarpJNI.AbstractContactable_where(swigCPtr, this), true);
  }

  public String getName() {
    return yarpJNI.AbstractContactable_getName(swigCPtr, this);
  }

  public boolean setEnvelope(PortWriter envelope) {
    return yarpJNI.AbstractContactable_setEnvelope(swigCPtr, this, PortWriter.getCPtr(envelope), envelope);
  }

  public boolean getEnvelope(PortReader envelope) {
    return yarpJNI.AbstractContactable_getEnvelope(swigCPtr, this, PortReader.getCPtr(envelope), envelope);
  }

  public int getInputCount() {
    return yarpJNI.AbstractContactable_getInputCount(swigCPtr, this);
  }

  public int getOutputCount() {
    return yarpJNI.AbstractContactable_getOutputCount(swigCPtr, this);
  }

  public void getReport(PortReport reporter) {
    yarpJNI.AbstractContactable_getReport(swigCPtr, this, PortReport.getCPtr(reporter), reporter);
  }

  public void setReporter(PortReport reporter) {
    yarpJNI.AbstractContactable_setReporter(swigCPtr, this, PortReport.getCPtr(reporter), reporter);
  }

  public boolean isWriting() {
    return yarpJNI.AbstractContactable_isWriting(swigCPtr, this);
  }

  public void setReader(PortReader reader) {
    yarpJNI.AbstractContactable_setReader(swigCPtr, this, PortReader.getCPtr(reader), reader);
  }

  public void setAdminReader(PortReader reader) {
    yarpJNI.AbstractContactable_setAdminReader(swigCPtr, this, PortReader.getCPtr(reader), reader);
  }

  public void setInputMode(boolean expectInput) {
    yarpJNI.AbstractContactable_setInputMode(swigCPtr, this, expectInput);
  }

  public void setOutputMode(boolean expectOutput) {
    yarpJNI.AbstractContactable_setOutputMode(swigCPtr, this, expectOutput);
  }

  public void setRpcMode(boolean expectRpc) {
    yarpJNI.AbstractContactable_setRpcMode(swigCPtr, this, expectRpc);
  }

  public SWIGTYPE_p_Type getType() {
    return new SWIGTYPE_p_Type(yarpJNI.AbstractContactable_getType(swigCPtr, this), true);
  }

  public void promiseType(SWIGTYPE_p_Type typ) {
    yarpJNI.AbstractContactable_promiseType(swigCPtr, this, SWIGTYPE_p_Type.getCPtr(typ));
  }

  public Property acquireProperties(boolean readOnly) {
    long cPtr = yarpJNI.AbstractContactable_acquireProperties(swigCPtr, this, readOnly);
    return (cPtr == 0) ? null : new Property(cPtr, false);
  }

  public void releaseProperties(Property prop) {
    yarpJNI.AbstractContactable_releaseProperties(swigCPtr, this, Property.getCPtr(prop), prop);
  }

  public boolean write(PortWriter writer, PortWriter callback) {
    return yarpJNI.AbstractContactable_write__SWIG_0(swigCPtr, this, PortWriter.getCPtr(writer), writer, PortWriter.getCPtr(callback), callback);
  }

  public boolean write(PortWriter writer) {
    return yarpJNI.AbstractContactable_write__SWIG_1(swigCPtr, this, PortWriter.getCPtr(writer), writer);
  }

  public boolean write(PortWriter writer, PortReader reader, PortWriter callback) {
    return yarpJNI.AbstractContactable_write__SWIG_2(swigCPtr, this, PortWriter.getCPtr(writer), writer, PortReader.getCPtr(reader), reader, PortWriter.getCPtr(callback), callback);
  }

  public boolean write(PortWriter writer, PortReader reader) {
    return yarpJNI.AbstractContactable_write__SWIG_3(swigCPtr, this, PortWriter.getCPtr(writer), writer, PortReader.getCPtr(reader), reader);
  }

  public boolean read(PortReader reader, boolean willReply) {
    return yarpJNI.AbstractContactable_read__SWIG_0(swigCPtr, this, PortReader.getCPtr(reader), reader, willReply);
  }

  public boolean read(PortReader reader) {
    return yarpJNI.AbstractContactable_read__SWIG_1(swigCPtr, this, PortReader.getCPtr(reader), reader);
  }

  public boolean reply(PortWriter writer) {
    return yarpJNI.AbstractContactable_reply(swigCPtr, this, PortWriter.getCPtr(writer), writer);
  }

  public boolean replyAndDrop(PortWriter writer) {
    return yarpJNI.AbstractContactable_replyAndDrop(swigCPtr, this, PortWriter.getCPtr(writer), writer);
  }

  public void includeNodeInName(boolean flag) {
    yarpJNI.AbstractContactable_includeNodeInName(swigCPtr, this, flag);
  }

  public boolean setCallbackLock(SWIGTYPE_p_yarp__os__Mutex mutex) {
    return yarpJNI.AbstractContactable_setCallbackLock__SWIG_0(swigCPtr, this, SWIGTYPE_p_yarp__os__Mutex.getCPtr(mutex));
  }

  public boolean setCallbackLock() {
    return yarpJNI.AbstractContactable_setCallbackLock__SWIG_1(swigCPtr, this);
  }

  public boolean removeCallbackLock() {
    return yarpJNI.AbstractContactable_removeCallbackLock(swigCPtr, this);
  }

  public boolean lockCallback() {
    return yarpJNI.AbstractContactable_lockCallback(swigCPtr, this);
  }

  public boolean tryLockCallback() {
    return yarpJNI.AbstractContactable_tryLockCallback(swigCPtr, this);
  }

  public void unlockCallback() {
    yarpJNI.AbstractContactable_unlockCallback(swigCPtr, this);
  }

}
