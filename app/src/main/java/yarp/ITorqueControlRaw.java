/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class ITorqueControlRaw {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ITorqueControlRaw(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ITorqueControlRaw obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        yarpJNI.delete_ITorqueControlRaw(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean getAxes(SWIGTYPE_p_int ax) {
    return yarpJNI.ITorqueControlRaw_getAxes(swigCPtr, this, SWIGTYPE_p_int.getCPtr(ax));
  }

  public boolean setTorqueModeRaw() {
    return yarpJNI.ITorqueControlRaw_setTorqueModeRaw(swigCPtr, this);
  }

  public boolean getTorqueRaw(int j, SWIGTYPE_p_double t) {
    return yarpJNI.ITorqueControlRaw_getTorqueRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(t));
  }

  public boolean getTorquesRaw(SWIGTYPE_p_double t) {
    return yarpJNI.ITorqueControlRaw_getTorquesRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(t));
  }

  public boolean getTorqueRangeRaw(int j, SWIGTYPE_p_double min, SWIGTYPE_p_double max) {
    return yarpJNI.ITorqueControlRaw_getTorqueRangeRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(min), SWIGTYPE_p_double.getCPtr(max));
  }

  public boolean getTorqueRangesRaw(SWIGTYPE_p_double min, SWIGTYPE_p_double max) {
    return yarpJNI.ITorqueControlRaw_getTorqueRangesRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(min), SWIGTYPE_p_double.getCPtr(max));
  }

  public boolean setRefTorquesRaw(SWIGTYPE_p_double t) {
    return yarpJNI.ITorqueControlRaw_setRefTorquesRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(t));
  }

  public boolean setRefTorqueRaw(int j, double t) {
    return yarpJNI.ITorqueControlRaw_setRefTorqueRaw(swigCPtr, this, j, t);
  }

  public boolean getRefTorquesRaw(SWIGTYPE_p_double t) {
    return yarpJNI.ITorqueControlRaw_getRefTorquesRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(t));
  }

  public boolean getRefTorqueRaw(int j, SWIGTYPE_p_double t) {
    return yarpJNI.ITorqueControlRaw_getRefTorqueRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(t));
  }

  public boolean getBemfParamRaw(int j, SWIGTYPE_p_double bemf) {
    return yarpJNI.ITorqueControlRaw_getBemfParamRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(bemf));
  }

  public boolean setBemfParamRaw(int j, double bemf) {
    return yarpJNI.ITorqueControlRaw_setBemfParamRaw(swigCPtr, this, j, bemf);
  }

  public boolean getMotorTorqueParamsRaw(int j, MotorTorqueParameters params) {
    return yarpJNI.ITorqueControlRaw_getMotorTorqueParamsRaw(swigCPtr, this, j, MotorTorqueParameters.getCPtr(params), params);
  }

  public boolean setMotorTorqueParamsRaw(int j, MotorTorqueParameters params) {
    return yarpJNI.ITorqueControlRaw_setMotorTorqueParamsRaw(swigCPtr, this, j, MotorTorqueParameters.getCPtr(params), params);
  }

  public boolean setTorquePidRaw(int j, Pid pid) {
    return yarpJNI.ITorqueControlRaw_setTorquePidRaw(swigCPtr, this, j, Pid.getCPtr(pid), pid);
  }

  public boolean setTorquePidsRaw(Pid pids) {
    return yarpJNI.ITorqueControlRaw_setTorquePidsRaw(swigCPtr, this, Pid.getCPtr(pids), pids);
  }

  public boolean setTorqueErrorLimitRaw(int j, double limit) {
    return yarpJNI.ITorqueControlRaw_setTorqueErrorLimitRaw(swigCPtr, this, j, limit);
  }

  public boolean setTorqueErrorLimitsRaw(SWIGTYPE_p_double limits) {
    return yarpJNI.ITorqueControlRaw_setTorqueErrorLimitsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(limits));
  }

  public boolean getTorqueErrorRaw(int j, SWIGTYPE_p_double err) {
    return yarpJNI.ITorqueControlRaw_getTorqueErrorRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(err));
  }

  public boolean getTorqueErrorsRaw(SWIGTYPE_p_double errs) {
    return yarpJNI.ITorqueControlRaw_getTorqueErrorsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(errs));
  }

  public boolean getTorquePidOutputRaw(int j, SWIGTYPE_p_double out) {
    return yarpJNI.ITorqueControlRaw_getTorquePidOutputRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(out));
  }

  public boolean getTorquePidOutputsRaw(SWIGTYPE_p_double outs) {
    return yarpJNI.ITorqueControlRaw_getTorquePidOutputsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(outs));
  }

  public boolean getTorquePidRaw(int j, Pid pid) {
    return yarpJNI.ITorqueControlRaw_getTorquePidRaw(swigCPtr, this, j, Pid.getCPtr(pid), pid);
  }

  public boolean getTorquePidsRaw(Pid pids) {
    return yarpJNI.ITorqueControlRaw_getTorquePidsRaw(swigCPtr, this, Pid.getCPtr(pids), pids);
  }

  public boolean getTorqueErrorLimitRaw(int j, SWIGTYPE_p_double limit) {
    return yarpJNI.ITorqueControlRaw_getTorqueErrorLimitRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(limit));
  }

  public boolean getTorqueErrorLimitsRaw(SWIGTYPE_p_double limits) {
    return yarpJNI.ITorqueControlRaw_getTorqueErrorLimitsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(limits));
  }

  public boolean resetTorquePidRaw(int j) {
    return yarpJNI.ITorqueControlRaw_resetTorquePidRaw(swigCPtr, this, j);
  }

  public boolean disableTorquePidRaw(int j) {
    return yarpJNI.ITorqueControlRaw_disableTorquePidRaw(swigCPtr, this, j);
  }

  public boolean enableTorquePidRaw(int j) {
    return yarpJNI.ITorqueControlRaw_enableTorquePidRaw(swigCPtr, this, j);
  }

  public boolean setTorqueOffsetRaw(int j, double v) {
    return yarpJNI.ITorqueControlRaw_setTorqueOffsetRaw(swigCPtr, this, j, v);
  }

}
